// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.1
// source: role.proto

package role_center

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 代表一个身份组
type Role struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // 身份组的唯一 ID (例如 Discord Role ID)
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 身份组的名称 (将从 role_assignments.json 或其他映射中获取)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_role_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{0}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 代表一个被分配了身份组的用户
type AssignedUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`              // 用户的唯一 ID (例如 Discord User ID)
	AssignedAt    int64                  `protobuf:"varint,2,opt,name=assigned_at,json=assignedAt,proto3" json:"assigned_at,omitempty"` // 身份组分配操作的时间戳 (Unix timestamp)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignedUser) Reset() {
	*x = AssignedUser{}
	mi := &file_role_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignedUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignedUser) ProtoMessage() {}

func (x *AssignedUser) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignedUser.ProtoReflect.Descriptor instead.
func (*AssignedUser) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{1}
}

func (x *AssignedUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssignedUser) GetAssignedAt() int64 {
	if x != nil {
		return x.AssignedAt
	}
	return 0
}

// GetUserRoles 的请求消息
type GetUserRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`    // 要查询的用户的 ID
	GuildId       string                 `protobuf:"bytes,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"` // 服务器的 ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRolesRequest) Reset() {
	*x = GetUserRolesRequest{}
	mi := &file_role_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesRequest) ProtoMessage() {}

func (x *GetUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesRequest.ProtoReflect.Descriptor instead.
func (*GetUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserRolesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserRolesRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

// GetUserRoles 的响应消息
type GetUserRolesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Roles         []*Role                `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"` // 用户拥有的身份组列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRolesResponse) Reset() {
	*x = GetUserRolesResponse{}
	mi := &file_role_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesResponse) ProtoMessage() {}

func (x *GetUserRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesResponse.ProtoReflect.Descriptor instead.
func (*GetUserRolesResponse) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserRolesResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// GetRoleAssignments 的请求消息
type GetRoleAssignmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleId        string                 `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`    // 要查询的身份组的 ID
	GuildId       string                 `protobuf:"bytes,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"` // 服务器的 ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoleAssignmentsRequest) Reset() {
	*x = GetRoleAssignmentsRequest{}
	mi := &file_role_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoleAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleAssignmentsRequest) ProtoMessage() {}

func (x *GetRoleAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*GetRoleAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{4}
}

func (x *GetRoleAssignmentsRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *GetRoleAssignmentsRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

// GetRoleAssignments 的响应消息
type GetRoleAssignmentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*AssignedUser        `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"` // 该身份组下的用户列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoleAssignmentsResponse) Reset() {
	*x = GetRoleAssignmentsResponse{}
	mi := &file_role_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoleAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleAssignmentsResponse) ProtoMessage() {}

func (x *GetRoleAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*GetRoleAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoleAssignmentsResponse) GetUsers() []*AssignedUser {
	if x != nil {
		return x.Users
	}
	return nil
}

// AssignRole 的请求消息
type AssignRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 要分配身份组的用户的 ID
	GuildId       string                 `protobuf:"bytes,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`          // 服务器的 ID
	RoleId        string                 `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`             // 要分配的身份组的 ID
	OperatorId    string                 `protobuf:"bytes,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"` // 可选的操作 ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignRoleRequest) Reset() {
	*x = AssignRoleRequest{}
	mi := &file_role_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleRequest) ProtoMessage() {}

func (x *AssignRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleRequest.ProtoReflect.Descriptor instead.
func (*AssignRoleRequest) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{6}
}

func (x *AssignRoleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssignRoleRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *AssignRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AssignRoleRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

// AssignRole 的响应消息
type AssignRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 附加信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignRoleResponse) Reset() {
	*x = AssignRoleResponse{}
	mi := &file_role_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleResponse) ProtoMessage() {}

func (x *AssignRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleResponse.ProtoReflect.Descriptor instead.
func (*AssignRoleResponse) Descriptor() ([]byte, []int) {
	return file_role_proto_rawDescGZIP(), []int{7}
}

func (x *AssignRoleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AssignRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_role_proto protoreflect.FileDescriptor

const file_role_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"role.proto\x12\vrole_center\"*\n" +
	"\x04Role\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"H\n" +
	"\fAssignedUser\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1f\n" +
	"\vassigned_at\x18\x02 \x01(\x03R\n" +
	"assignedAt\"I\n" +
	"\x13GetUserRolesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x19\n" +
	"\bguild_id\x18\x02 \x01(\tR\aguildId\"?\n" +
	"\x14GetUserRolesResponse\x12'\n" +
	"\x05roles\x18\x01 \x03(\v2\x11.role_center.RoleR\x05roles\"O\n" +
	"\x19GetRoleAssignmentsRequest\x12\x17\n" +
	"\arole_id\x18\x01 \x01(\tR\x06roleId\x12\x19\n" +
	"\bguild_id\x18\x02 \x01(\tR\aguildId\"M\n" +
	"\x1aGetRoleAssignmentsResponse\x12/\n" +
	"\x05users\x18\x01 \x03(\v2\x19.role_center.AssignedUserR\x05users\"\x81\x01\n" +
	"\x11AssignRoleRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x19\n" +
	"\bguild_id\x18\x02 \x01(\tR\aguildId\x12\x17\n" +
	"\arole_id\x18\x03 \x01(\tR\x06roleId\x12\x1f\n" +
	"\voperator_id\x18\x04 \x01(\tR\n" +
	"operatorId\"H\n" +
	"\x12AssignRoleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x98\x02\n" +
	"\vRoleService\x12S\n" +
	"\fGetUserRoles\x12 .role_center.GetUserRolesRequest\x1a!.role_center.GetUserRolesResponse\x12e\n" +
	"\x12GetRoleAssignments\x12&.role_center.GetRoleAssignmentsRequest\x1a'.role_center.GetRoleAssignmentsResponse\x12M\n" +
	"\n" +
	"AssignRole\x12\x1e.role_center.AssignRoleRequest\x1a\x1f.role_center.AssignRoleResponseB\x16Z\x14grpc/gen/role_centerb\x06proto3"

var (
	file_role_proto_rawDescOnce sync.Once
	file_role_proto_rawDescData []byte
)

func file_role_proto_rawDescGZIP() []byte {
	file_role_proto_rawDescOnce.Do(func() {
		file_role_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_role_proto_rawDesc), len(file_role_proto_rawDesc)))
	})
	return file_role_proto_rawDescData
}

var file_role_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_role_proto_goTypes = []any{
	(*Role)(nil),                       // 0: role_center.Role
	(*AssignedUser)(nil),               // 1: role_center.AssignedUser
	(*GetUserRolesRequest)(nil),        // 2: role_center.GetUserRolesRequest
	(*GetUserRolesResponse)(nil),       // 3: role_center.GetUserRolesResponse
	(*GetRoleAssignmentsRequest)(nil),  // 4: role_center.GetRoleAssignmentsRequest
	(*GetRoleAssignmentsResponse)(nil), // 5: role_center.GetRoleAssignmentsResponse
	(*AssignRoleRequest)(nil),          // 6: role_center.AssignRoleRequest
	(*AssignRoleResponse)(nil),         // 7: role_center.AssignRoleResponse
}
var file_role_proto_depIdxs = []int32{
	0, // 0: role_center.GetUserRolesResponse.roles:type_name -> role_center.Role
	1, // 1: role_center.GetRoleAssignmentsResponse.users:type_name -> role_center.AssignedUser
	2, // 2: role_center.RoleService.GetUserRoles:input_type -> role_center.GetUserRolesRequest
	4, // 3: role_center.RoleService.GetRoleAssignments:input_type -> role_center.GetRoleAssignmentsRequest
	6, // 4: role_center.RoleService.AssignRole:input_type -> role_center.AssignRoleRequest
	3, // 5: role_center.RoleService.GetUserRoles:output_type -> role_center.GetUserRolesResponse
	5, // 6: role_center.RoleService.GetRoleAssignments:output_type -> role_center.GetRoleAssignmentsResponse
	7, // 7: role_center.RoleService.AssignRole:output_type -> role_center.AssignRoleResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_role_proto_init() }
func file_role_proto_init() {
	if File_role_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_role_proto_rawDesc), len(file_role_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_role_proto_goTypes,
		DependencyIndexes: file_role_proto_depIdxs,
		MessageInfos:      file_role_proto_msgTypes,
	}.Build()
	File_role_proto = out.File
	file_role_proto_goTypes = nil
	file_role_proto_depIdxs = nil
}
